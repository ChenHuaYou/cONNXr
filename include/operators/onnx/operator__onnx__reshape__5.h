
//this file was generated by ../../scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__ONNX__RESHAPE__5_H
# define OPERATOR_OPERATOR__ONNX__RESHAPE__5_H

# include "operators/operator.h"
# include "operators/operator_stub.h"

typedef struct operator_context_input__operator__onnx__reshape__5 {
    size_t length;
    operator_tensor *data;
operator_tensor *shape;
} operator_context_input_operator__onnx__reshape__5;

typedef struct operator_context_output__operator__onnx__reshape__5 {
    size_t length;
    operator_tensor *reshaped;
} operator_context_output_operator__onnx__reshape__5;

typedef struct operator_context_attribute__operator__onnx__reshape__5 {
    size_t length;
    
} operator_context_attribute_operator__onnx__reshape__5;

typedef struct operator_context__operator__onnx__reshape__5 {
    struct operator_context_input__operator__onnx__reshape__5     *input;
    struct operator_context_output__operator__onnx__reshape__5    *output;
    struct operator_context_attribute__operator__onnx__reshape__5 *attribute;
    operator_executer                          operator;
} operator_context__operator__onnx__reshape__5;

/**
 * onnx operator 'Reshape' version 5
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Reshape the input tensor similar to numpy.reshape. First input is the data
 * tensor, second input is a shape tensor which specifies the output shape. It
 * outputs the reshaped tensor. At most one dimension of the new shape can be
 * -1. In this case, the value is inferred from the size of the tensor and the
 * remaining dimensions. A dimension could also be 0, in which case the actual
 * dimension value is unchanged (i.e. taken from the input tensor).
 * 
 * Constraint T:
 *   Constrain input and output types to all tensor types.
 *   Allowed Types: tensor_bool, tensor_complex128, tensor_complex64,
 *                  tensor_double, tensor_float, tensor_float16, tensor_int16,
 *                  tensor_int32, tensor_int64, tensor_int8, tensor_string,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * Input T data:
 *   An input tensor.
 *   Allowed Types: tensor_bool, tensor_complex128, tensor_complex64,
 *                  tensor_double, tensor_float, tensor_float16, tensor_int16,
 *                  tensor_int32, tensor_int64, tensor_int8, tensor_string,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * 
 * Input tensor(int64) shape:
 *   Specified shape for output.
 *   Allowed Types: tensor_int64
 * Output T reshaped:
 *   Reshaped data.
 *   Allowed Types: tensor_bool, tensor_complex128, tensor_complex64,
 *                  tensor_double, tensor_float, tensor_float16, tensor_int16,
 *                  tensor_int32, tensor_int64, tensor_int8, tensor_string,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8

 *
 * @since version 5
 *
 * @see ../../../../../../travis/build/onnx/wheel-builder/onnx/onnx/defs/tensor/defs.cc:226
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape
 */
operator_status operator__onnx__reshape__5(
    operator_context__operator__onnx__reshape__5 *ctx
);

operator_executer resolve_operator__onnx__reshape__5(
    operator_context__operator__onnx__reshape__5 *ctx
);

extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_bool(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_complex128(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_complex64(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_double(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_float(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_float16(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_int16(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_int32(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_int64(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_int8(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_string(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_uint16(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_uint32(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_uint64(
    operator_context__operator__onnx__reshape__5 *ctx
);
extern __attribute__((weak))
operator_status operator__onnx__reshape__5__T_tensor_uint8(
    operator_context__operator__onnx__reshape__5 *ctx
);
# endif
