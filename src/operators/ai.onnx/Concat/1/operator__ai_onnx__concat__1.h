//this file was generated by ../../../../../../scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__CONCAT__1_H
# define OPERATOR_OPERATOR__AI_ONNX__CONCAT__1_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Concat' version 1
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Concatenate a list of tensors into a single tensor
 * 
 * Constraint T:
 *   Constrain output types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Input T inputs:
 *   List of tensors for concatenation
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T concat_result:
 *   Concatenated tensor
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Attribute INT axis (optional):
 *   Which axis to concat on. Default value is 1.
*
* @since version 1
*
 * @see io/onnx/onnx/defs/tensor/old.cc:151
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Concat
*/

operator_status
prepare_operator__ai_onnx__concat__1(
    Onnx__NodeProto *ctx
);

extern operator_info info_operator__ai_onnx__concat__1;

typedef struct {
    int64_t axis;

} context_operator__ai_onnx__concat__1;

operator_status
execute_operator__ai_onnx__concat__1(
    Onnx__NodeProto *ctx
);

# endif