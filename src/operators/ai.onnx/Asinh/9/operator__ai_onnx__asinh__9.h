//this file was generated by ../../../../../../scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__ASINH__9_H
# define OPERATOR_OPERATOR__AI_ONNX__ASINH__9_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Asinh' version 9
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Calculates the hyperbolic arcsine of the given input tensor element-wise.
 * 
 * Constraint T:
 *   Constrain input and output types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Input T input:
 *   Input tensor
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T output:
 *   The hyperbolic arcsine values of the input tensor computed element-wise
 *   Allowed Types: tensor_double, tensor_float, tensor_float16

*
* @since version 9
*
 * @see io/onnx/onnx/defs/math/defs.cc:1417
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Asinh
*/

operator_status
prepare_operator__ai_onnx__asinh__9(
    Onnx__NodeProto *ctx
);

extern operator_info info_operator__ai_onnx__asinh__9;

typedef struct {
// no attributes
} context_operator__ai_onnx__asinh__9;

operator_status
execute_operator__ai_onnx__asinh__9(
    Onnx__NodeProto *ctx
);

# endif