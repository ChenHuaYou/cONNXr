//this file was generated by ../../../../../../scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__TILE__1_H
# define OPERATOR_OPERATOR__AI_ONNX__TILE__1_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Tile' version 1
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Repeat the elements of a tensor along an axis.
 * 
 * Constraint T:
 *   Constrain input types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * 
 * Constraint T1:
 *   Constrain tiles and axis's type to int64 tensors.
 *   Allowed Types: tensor_int64
 * Input T input:
 *   Input tensor of any shape.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * 
 * Input T tiles:
 *   Number of repeated copies to make of the input tensor.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * 
 * Input T axis:
 *   Axis along which to repeat.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T output:
 *   Output tensor of same shape and type as input.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16

*
* @since version 1
*
 * @see io/onnx/onnx/defs/tensor/old.cc:390
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Tile
*/

operator_status
prepare_operator__ai_onnx__tile__1(
    Onnx__NodeProto *ctx
);

extern operator_info info_operator__ai_onnx__tile__1;

typedef struct {
// no attributes
} context_operator__ai_onnx__tile__1;

operator_status
execute_operator__ai_onnx__tile__1(
    Onnx__NodeProto *ctx
);

# endif